<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bizimle bağlantıda kalmak için lütfen kişisel bilgilerinizle giriş yapın" xml:space="preserve">
    <value>To stay connected with us, please log in with your personal information</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Firma Numarası" xml:space="preserve">
    <value>Firm Number</value>
  </data>
  <data name="Giriş Yap" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="Hakkımızda" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="Hesap Oluştur" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="Hoşgeldiniz!" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="Kayıt Ol" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="Kişisel bilgilerinizi girin ve bizimle yolculuğa başlayın" xml:space="preserve">
    <value>Enter your personal information and start your journey with us</value>
  </data>
  <data name="Kullanıcı Adı" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Kurulduğumuz ilk günden itibaren profesyonel bir anlayış sergileyip, insana yatırımın önemini iyi anlayarak bu yolda çalışmalarımızı sürdürüyoruz. Uzser Bilişim olarak en ucuz ürünü satmak yerine en kaliteli ürünü müşterilerimizin alabileceği en iyi servisle beraber uygun koşullarda kullanıma sunarız. Kazancımızın büyük bölümünü gelişme ve iyileştirmeye ayırarak bu sayede hizmet kalitemizi 1997 yılından günümüze kadar en iyi çözümleri sunmaya odaklandık." xml:space="preserve">
    <value>From the day we were established, we have demonstrated a professional approach and continue our efforts with a deep understanding of the importance of investing in people. At Uzser Bilişim, instead of selling the cheapest product, we offer our customers the highest quality product with the best service, all at reasonable conditions. By dedicating a significant portion of our earnings to development and improvement, we have focused on providing the best solutions for our service quality from 1997 to the present day.</value>
  </data>
  <data name="Tekrar Hoşgeldiniz!" xml:space="preserve">
    <value>Welcome Back!</value>
  </data>
  <data name="veya hesabınızı kullanın" xml:space="preserve">
    <value>or use your account</value>
  </data>
  <data name="ya da email ile kayıt ol!" xml:space="preserve">
    <value>or sign up by email!</value>
  </data>
  <data name="İsim" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Şifre" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Şifremi Unuttum?" xml:space="preserve">
    <value>Forgot the password?</value>
  </data>
</root>